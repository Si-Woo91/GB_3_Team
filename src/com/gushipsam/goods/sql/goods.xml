<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goods">
	
	<select id="getgoodsList"  parameterType="string" resultType="goodsdto">
		SELECT * FROM goods where gCatg =#{gCatg}
	</select>
	
	<select id="getgoodsListwBrand"  parameterType="hashmap" resultType="goodsdto">
		SELECT * FROM goods where gCatg =#{gCatg} and gBrand = #{gBrand} 
	</select>
	
	<select id="getgoodsDetail"  parameterType="int" resultType="goodsdto">
		SELECT * FROM goods WHERE gID = #{gID}
	</select>

	<!-- (관리자 페이지)상품 데이터 -->
	<select id="selectGoods" resultType="goodsdto"
		parameterType="goodsdto">
		SELECT * FROM GOODS
	</select>
	
	<!-- (관리자 페이지) 총 상품 수 -->
	<select id="getGoodsCnt" resultType="_int">
		SELECT COUNT(*) FROM GOODS
	</select>
	
	<!-- (관리자 페이지)상품 관려된 모든 데이터 select -->
	<select id="getGoodsList" resultType="goodsdto" parameterType="string">
		SELECT * FROM GOODS
	</select>
	
	<!-- (관리자 페이지) 검색내용 반영한 총 상품 수. 다중LIKE 위해 REGEXP 사용, 중간 공백 제거 위해 REGEXP_REPLACE 사용 -->
	<select id="getGoodsCntSearch" parameterType="hashmap" resultType="_int">
		SELECT COUNT(*) FROM GOODS
		WHERE REGEXP_LIKE(GCATG,
		REGEXP_REPLACE(
			REGEXP_REPLACE(
			<foreach collection="searchtext" item="text" open="(" separator="" close=" 'END')">
				'${text}' || '|' || 
			</foreach>
			,'(^[[:space:]]*|[[:space:]]*$)')
		,'|END','')
		,'i')
		OR REGEXP_LIKE(GBRAND, REGEXP_REPLACE(REGEXP_REPLACE(<foreach collection="searchtext" item="text" open="(" separator="" close=" 'END')">'${text}' || '|' || </foreach>,'(^[[:space:]]*|[[:space:]]*$)'),'|END',''),'i')
		OR REGEXP_LIKE(GNAME, REGEXP_REPLACE(REGEXP_REPLACE(<foreach collection="searchtext" item="text" open="(" separator="" close=" 'END')">'${text}' || '|' || </foreach>,'(^[[:space:]]*|[[:space:]]*$)'),'|END',''),'i')
		OR REGEXP_LIKE(GMODEL, REGEXP_REPLACE(REGEXP_REPLACE(<foreach collection="searchtext" item="text" open="(" separator="" close=" 'END')">'${text}' || '|' || </foreach>,'(^[[:space:]]*|[[:space:]]*$)'),'|END',''),'i')
		OR REGEXP_LIKE(GSIZE, REGEXP_REPLACE(REGEXP_REPLACE(<foreach collection="searchtext" item="text" open="(" separator="" close=" 'END')">'${text}' || '|' || </foreach>,'(^[[:space:]]*|[[:space:]]*$)'),'|END',''),'i')
		OR REGEXP_LIKE(GETC, REGEXP_REPLACE(REGEXP_REPLACE(<foreach collection="searchtext" item="text" open="(" separator="" close=" 'END')">'${text}' || '|' || </foreach>,'(^[[:space:]]*|[[:space:]]*$)'),'|END',''),'i')
		OR REGEXP_LIKE(GIMGS, REGEXP_REPLACE(REGEXP_REPLACE(<foreach collection="searchtext" item="text" open="(" separator="" close=" 'END')">'${text}' || '|' || </foreach>,'(^[[:space:]]*|[[:space:]]*$)'),'|END',''),'i')
	</select>
	
	<!-- (관리자 페이지) 검색내용 반영한 상품 관려된 모든 데이터 select. 다중LIKE 위해 REGEXP 사용, 중간 공백 제거 위해 REGEXP_REPLACE 사용 -->
	<select id="getGoodsListSearch" resultType="goodsdto" parameterType="hashmap">
		SELECT * FROM GOODS
		WHERE REGEXP_LIKE(GCATG,
		REGEXP_REPLACE(
			REGEXP_REPLACE(
			<foreach collection="searchtext" item="text" open="(" separator="" close=" 'END')">
				'${text}' || '|' || 
			</foreach>
			,'(^[[:space:]]*|[[:space:]]*$)')
		,'|END','')
		,'i')
		OR REGEXP_LIKE(GBRAND, REGEXP_REPLACE(REGEXP_REPLACE(<foreach collection="searchtext" item="text" open="(" separator="" close=" 'END')">'${text}' || '|' || </foreach>,'(^[[:space:]]*|[[:space:]]*$)'),'|END',''),'i')
		OR REGEXP_LIKE(GNAME, REGEXP_REPLACE(REGEXP_REPLACE(<foreach collection="searchtext" item="text" open="(" separator="" close=" 'END')">'${text}' || '|' || </foreach>,'(^[[:space:]]*|[[:space:]]*$)'),'|END',''),'i')
		OR REGEXP_LIKE(GMODEL, REGEXP_REPLACE(REGEXP_REPLACE(<foreach collection="searchtext" item="text" open="(" separator="" close=" 'END')">'${text}' || '|' || </foreach>,'(^[[:space:]]*|[[:space:]]*$)'),'|END',''),'i')
		OR REGEXP_LIKE(GSIZE, REGEXP_REPLACE(REGEXP_REPLACE(<foreach collection="searchtext" item="text" open="(" separator="" close=" 'END')">'${text}' || '|' || </foreach>,'(^[[:space:]]*|[[:space:]]*$)'),'|END',''),'i')
		OR REGEXP_LIKE(GETC, REGEXP_REPLACE(REGEXP_REPLACE(<foreach collection="searchtext" item="text" open="(" separator="" close=" 'END')">'${text}' || '|' || </foreach>,'(^[[:space:]]*|[[:space:]]*$)'),'|END',''),'i')
		OR REGEXP_LIKE(GIMGS, REGEXP_REPLACE(REGEXP_REPLACE(<foreach collection="searchtext" item="text" open="(" separator="" close=" 'END')">'${text}' || '|' || </foreach>,'(^[[:space:]]*|[[:space:]]*$)'),'|END',''),'i')
	</select>
	
	<!-- (관리자 페이지)상품 추가 -->
	<insert id="insertGoods" parameterType="goodsdto">
<!-- 		INSERT INTO GOODS -->
<!-- 		(gID,gImgs,gName,gBrand,gPRICE,gSTOCK)VALUES (seq_gidx.nextval, -->
<!-- 		#{gImgs}, #{gName}, #{gBrand}, #{gPRICE}, #{gSTOCK}) -->
		INSERT INTO GOODS (gImgs,gName,gBrand,gPRICE,gSTOCK)
      	VALUES (#{gImgs},#{gName},#{gBrand},#{gPRICE},#{gSTOCK})
	</insert>
	
	<!-- 장바구니에 존재하는 삭제 예정인 상품 개수 세기 -->
	<select id="searchCartForDel" parameterType="hashmap" resultType="_int">
		SELECT COUNT(*)
		FROM CART
		WHERE GID IN
		<foreach collection="delgids" item="gID" open="(" separator="," close=")">
			#{gID}
		</foreach>
	</select>
	
	<!-- 주문내역에 존재하는 삭제 예정인 상품 개수 세기 -->
	<select id="searchOrdersForDel" parameterType="hashmap" resultType="_int">
		SELECT COUNT(*)
		FROM ORDERS
		WHERE GID IN
		<foreach collection="delgids" item="gID" open="(" separator="," close=")">
			#{gID}
		</foreach>
	</select>
	
	<!-- 장바구니테이블에서 상품 삭제 -->
	<delete id="delGoodFromCart" parameterType="hashmap">
		DELETE FROM CART
		WHERE GID IN
		<foreach collection="delgids" item="gID" open="(" separator="," close=")">
			#{gID}
		</foreach>
	</delete>
	
	<!-- 주문내역테이블에서 상품 삭제 -->
	<delete id="delGoodFromOrders" parameterType="hashmap">
		DELETE FROM ORDERS
		WHERE GID IN
		<foreach collection="delgids" item="gID" open="(" separator="," close=")">
			#{gID}
		</foreach>
	</delete>
	
	<!-- 상품테이블에서 상품 삭제 -->
	<delete id="delGoodFromGoods" parameterType="hashmap">
		DELETE FROM GOODS
		WHERE GID IN
		<foreach collection="delgids" item="gID" open="(" separator="," close=")">
			#{gID}
		</foreach>
	</delete>
	
	
</mapper>
